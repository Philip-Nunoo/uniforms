(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./pages/API/connectField.mdx":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return v});var t=o("./node_modules/docz-core/node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),s=o.n(t),r=o("./node_modules/docz-core/node_modules/@babel/runtime/helpers/classCallCheck.js"),a=o.n(r),i=o("./node_modules/docz-core/node_modules/@babel/runtime/helpers/createClass.js"),d=o.n(i),l=o("./node_modules/docz-core/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"),p=o.n(l),u=o("./node_modules/docz-core/node_modules/@babel/runtime/helpers/getPrototypeOf.js"),c=o.n(u),m=o("./node_modules/docz-core/node_modules/@babel/runtime/helpers/inherits.js"),h=o.n(m),f=o("./node_modules/react/index.js"),b=o.n(f),g=o("./node_modules/@mdx-js/tag/dist/index.js"),v=function(e){function n(e){var o;return a()(this,n),(o=p()(this,c()(n).call(this,e))).layout=null,o}return h()(n,e),d()(n,[{key:"render",value:function(){var e=this.props,n=e.components;s()(e,["components"]);return b.a.createElement(g.MDXTag,{name:"wrapper",components:n},b.a.createElement(g.MDXTag,{name:"h2",components:n,props:{id:"connectfield"}},"connectField"),b.a.createElement(g.MDXTag,{name:"pre",components:n},b.a.createElement(g.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import connectField from 'uniforms/connectField';\n\nconst ComponentXField = connectField(ComponentX, {\n  // Props mapper\n  //   Useful for integration with third-party components. For example, you\n  //   can rename specific props instead of doing mapping by hand in the\n  //   component.\n  mapProps: props => props,\n\n  // Base field class\n  //   It's reserved for the future - right now there's no useful usecase.\n  baseField: BaseField,\n\n  // <input> helper\n  //   In React, <input> can't have undefined or null value and any onChange\n  //   at once - this option passes 'undefined' as en empty string.\n  ensureValue: true,\n\n  // Initial value check\n  //   If truthy, then after the first render defaultValue is set as value if\n  //   no value is provided (undefined).\n  initialValue: true,\n\n  // Additional parent prop\n  //   If truthy, additional parent prop is provided (if any). Useful for\n  //   nested or complex fields.\n  includeParent: false,\n\n  // Field name chain visibility\n  //   If truthy, then every nested field name will be prefixed with parent\n  //   name.\n  includeInChain: true\n});\n")))}}]),n}(b.a.Component)}}]);
//# sourceMappingURL=pages-api-connect-field.7bdcc2e35d2d8e0f9848.js.map