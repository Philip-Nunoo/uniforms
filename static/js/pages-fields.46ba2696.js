(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{"./pages/Fields.mdx":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return N});var t=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),o=a.n(t),m=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/classCallCheck.js"),r=a.n(m),p=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/createClass.js"),l=a.n(p),c=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"),s=a.n(c),i=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/getPrototypeOf.js"),d=a.n(i),g=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/inherits.js"),T=a.n(g),u=a("./node_modules/react/index.js"),E=a.n(u),D=a("./node_modules/@mdx-js/tag/dist/index.js"),N=function(e){function n(e){var a;return r()(this,n),(a=s()(this,d()(n).call(this,e))).layout=null,a}return T()(n,e),l()(n,[{key:"render",value:function(){var e=this.props,n=e.components;o()(e,["components"]);return E.a.createElement(D.MDXTag,{name:"wrapper",components:n},E.a.createElement(D.MDXTag,{name:"h1",components:n,props:{id:"fields"}},"Fields"),E.a.createElement(D.MDXTag,{name:"h2",components:n,props:{id:"autofield-algorithm"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"AutoField")," algorithm"),E.a.createElement(D.MDXTag,{name:"pre",components:n},E.a.createElement(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"let component = props.component;\nif (component === undefined) {\n  if (props.allowedValues) {\n    if (props.checkboxes && props.fieldType !== Array) {\n      component = RadioField;\n    } else {\n      component = SelectField;\n    }\n  } else {\n    switch (props.fieldType) {\n      case Date:\n        component = DateField;\n        break;\n      case Array:\n        component = ListField;\n        break;\n      case Number:\n        component = NumField;\n        break;\n      case Object:\n        component = NestField;\n        break;\n      case String:\n        component = TextField;\n        break;\n      case Boolean:\n        component = BoolField;\n        break;\n    }\n\n    invariant(component, 'Unsupported field type: %s', props.fieldType.toString());\n  }\n}\n")),E.a.createElement(D.MDXTag,{name:"h2",components:n,props:{id:"guaranteed-props"}},"Guaranteed props"),E.a.createElement(D.MDXTag,{name:"p",components:n},E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," These are ",E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"not")," the only props that a field will receive - these are guaranteed for all fields created with ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper."),E.a.createElement(D.MDXTag,{name:"table",components:n},E.a.createElement(D.MDXTag,{name:"thead",components:n,parentName:"table"},E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"thead"},E.a.createElement(D.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Name"),E.a.createElement(D.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Type"),E.a.createElement(D.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Description"))),E.a.createElement(D.MDXTag,{name:"tbody",components:n,parentName:"table"},E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"changed")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"bool")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Has field changed?")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"disabled")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"bool")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Is field disabled?")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"error")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"object")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field scoped part of validation error.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"errorMessage")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field scoped validation error message.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"field")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"object")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field definition from schema.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"fields")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"arrayOf(string)")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Subfields names.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"fieldType")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field type.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"findError")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func(name)")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Request another field error.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"findField")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func(name)")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Request another field field.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"findValue")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func(name)")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Request another field value.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"id")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field id - given or random.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"label")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field label.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"name")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field name.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"onChange")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func(value, [name])")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Change field value.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"parent")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"object")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Parent field props.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"placeholder")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field placeholder.")),E.a.createElement(D.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"value")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"any")),E.a.createElement(D.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field value.")))),E.a.createElement(D.MDXTag,{name:"h2",components:n,props:{id:"props-propagation"}},"Props propagation"),E.a.createElement(D.MDXTag,{name:"p",components:n},"Few props propagate in a very special way. These are ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"label"),", ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"placeholder")," and ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"disabled"),"."),E.a.createElement(D.MDXTag,{name:"p",components:n},E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(D.MDXTag,{name:"pre",components:n},E.a.createElement(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},'<TextField />                    // default label | no      placeholder\n<TextField label="Text" />       // custom  label | no      placeholder\n<TextField label={false} />      // no      label | no      placeholder\n<TextField placeholder />        // default label | default placeholder\n<TextField placeholder="Text" /> // default label | custom  placeholder\n\n<NestField label={null}> // null = no label but the children have their labels\n    <TextField />\n</NestField>\n\n<NestField label={false}> // false = no label and the children have no labels\n    <TextField />\n</NestField>\n\n<ListField name="authors" disabled>          // Additions are disabled...\n    <ListItemField name="$" disabled>        // ...deletion too\n        <NestField disabled={false} name=""> // ...but editing is not.\n            <TextField name="name" />\n            <NumField  name="age" />\n        </NestField>\n    </ListItemField>\n</ListField>\n')),E.a.createElement(D.MDXTag,{name:"p",components:n},E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"label"),", ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"placeholder")," and ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"disabled")," are cast to ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Boolean")," before being passed to nested fields."),E.a.createElement(D.MDXTag,{name:"h2",components:n,props:{id:"example-compositefield"}},"Example: ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"CompositeField")),E.a.createElement(D.MDXTag,{name:"p",components:n},E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(D.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(D.MDXTag,{name:"pre",components:n},E.a.createElement(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import AutoField from 'uniforms/AutoField';\nimport React from 'react';\nimport connectField from 'uniforms/connectField';\n\n// This field is a kind of a shortcut for few fields. You can also access all\n// field props here, like value or onChange for some extra logic.\nconst Composite = () => (\n  <section>\n    <AutoField field=\"firstName\" />\n    <AutoField field=\"lastName\" />\n    <AutoField field=\"age\" />\n  </section>\n);\nexport default connectField(Composite);\n")),E.a.createElement(D.MDXTag,{name:"h2",components:n,props:{id:"example-customautofield"}},"Example: ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"CustomAutoField")),E.a.createElement(D.MDXTag,{name:"p",components:n},"These are two ",E.a.createElement(D.MDXTag,{name:"em",components:n,parentName:"p"},"standard")," options to define a custom ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"AutoField"),": either using ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," or simply taking the code from the ",E.a.createElement(D.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/packages/uniforms-unstyled/src/AutoField.js#L14-L47"}},"original one")," ",E.a.createElement(D.MDXTag,{name:"em",components:n,parentName:"p"},"(theme doesn't matter)")," and simply apply own components and/or rules to render components. Below an example with ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField"),"."),E.a.createElement(D.MDXTag,{name:"p",components:n},E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(D.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(D.MDXTag,{name:"pre",components:n},E.a.createElement(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"// Remember to choose a correct theme package\nimport AutoField from 'uniforms-unstyled/AutoField';\n\nconst CustomAuto = props => {\n  // This way we don't care about unhandled cases - we use default\n  // AutoField as a fallback component.\n  const Component = determineComponentFromProps(props) || AutoField;\n\n  return <Component {...props} />;\n};\n\nconst CustomAutoField = connectField(CustomAuto, {\n  ensureValue: false,\n  includeInChain: false,\n  initialValue: false\n});\n")),E.a.createElement(D.MDXTag,{name:"p",components:n},"You can also tell your ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"AutoForm"),"/",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"QuickForm"),"/",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ValidatedQuickForm")," to use it."),E.a.createElement(D.MDXTag,{name:"pre",components:n},E.a.createElement(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"<AutoForm {...props} autoField={CustomAutoField} />\n")),E.a.createElement(D.MDXTag,{name:"h2",components:n,props:{id:"example-cyclefield"}},"Example: ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"CycleField")),E.a.createElement(D.MDXTag,{name:"p",components:n},E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(D.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(D.MDXTag,{name:"pre",components:n},E.a.createElement(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import React from 'react';\nimport classnames from 'classnames';\nimport connectField from 'uniforms/connectField';\n\n// This field works as follows: iterate all allowed values and optionally no-value\n// state if the field is not required. This one uses Semantic-UI.\nconst Cycle = ({allowedValues, disabled, label, required, value, onChange}) => (\n  <a\n    className={classnames('ui', !value && 'basic', 'label')}\n    onClick={() =>\n      onChange(\n        value\n          ? allowedValues.indexOf(value) === allowedValues.length - 1\n            ? required\n              ? allowedValues[0]\n              : null\n            : allowedValues[allowedValues.indexOf(value) + 1]\n          : allowedValues[0]\n      )\n    }\n  >\n    {value || label}\n  </a>\n);\nexport default connectField(Cycle);\n")),E.a.createElement(D.MDXTag,{name:"h2",components:n,props:{id:"example-rangefield"}},"Example: ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"RangeField")),E.a.createElement(D.MDXTag,{name:"p",components:n},E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(D.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(D.MDXTag,{name:"pre",components:n},E.a.createElement(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import React from 'react';\nimport connectField from 'uniforms/connectField';\n\n// This field works as follows: two datepickers are bound to each other. Value is\n// a {start, stop} object.\nconst Range = ({onChange, value: {start, stop}}) => (\n  <section>\n    <DatePicker max={stop} value={start} onChange={start => onChange(start, stop)} />\n    <DatePicker min={start} value={stop} onChange={stop => onChange(start, stop)} />\n  </section>\n);\nexport default connectField(Range);\n")),E.a.createElement(D.MDXTag,{name:"h2",components:n,props:{id:"example-ratingfield"}},"Example: ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"RatingField")),E.a.createElement(D.MDXTag,{name:"p",components:n},E.a.createElement(D.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(D.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(D.MDXTag,{name:"pre",components:n},E.a.createElement(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import React from 'react';\nimport classnames from 'classnames';\nimport connectField from 'uniforms/connectField';\n\n// This field works as follows: render stars for each rating and mark them as\n// filled, if rating (value) is greater. This one uses Semantic-UI.\nconst Rating = ({className, disabled, max = 5, required, value, onChange}) => (\n  <section className={classnames('ui', {disabled, required}, className, 'rating')}>\n    {[...Array(max)]\n      .map((_, index) => index + 1)\n      .map(index => (\n        <i\n          key={index}\n          className={classnames(index <= value && 'active', 'icon')}\n          onClick={() => disabled || onChange(!required && value === index ? null : index)}\n        />\n      ))}\n  </section>\n);\nexport default connectField(Rating);\n")))}}]),n}(E.a.Component)}}]);
//# sourceMappingURL=pages-fields.7bdcc2e35d2d8e0f9848.js.map