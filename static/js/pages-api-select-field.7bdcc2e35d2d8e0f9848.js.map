{"version":3,"sources":["webpack:///./pages/API/SelectField.mdx"],"names":["MDXContent","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","call","layout","_this$props","components","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","id","parentName","className","React","Component"],"mappings":"y0BAQqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAJ,IACjBE,EAAAG,IAAAD,KAAAE,IAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,wDAIV,IAAAO,EAC0BL,KAAKH,MAA9BS,EADDD,EACCC,WADDC,IAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYT,MAAO,CAACgB,GAAK,gBAAvD,eACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMjB,MAAO,CAACkB,UAAY,gBAAjF,qtEA6D3CP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,SAASN,WAAYA,EAAYQ,WAAW,KAAzD,SAAzC,QAAiIN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,aAAjI,qCAzEwCE,IAAMC","file":"static/js/pages-api-select-field.e7e62456.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h2\" components={components} props={{\"id\":\"selectfield\"}}>{`SelectField`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import SelectField from 'uniforms-unstyled/SelectField'; // Choose your theme package.\n\n<SelectField\n  // Array of allowed values.\n  //   By default, those are extracted from your schema.\n  allowedValues={[value1, value2 /* ... */]}\n  // Turn on checkbox/radio mode.\n  //   It's always true in mutltiple (i.e. fieldType === Array) mode.\n  checkboxes={true}\n  // Field layout\n  //  The layout of label. You can set span and/or offset.\n  // Available in:\n  //   antd\n  labelCol={{span: 4}} // 'ant-col-4' on label\n  labelCol={{offset: 2}} // 'ant-col-offset-2' on label\n  // Field layout\n  //   The layout for input controls. Same as labelCol\n  // Available in:\n  //   antd\n  wrapperCol={{span: 4}} // 'ant-col-4' on field\n  wrapperCol={{offset: 2}} // 'ant-col-offset-2' on field\n  // Checkbox inline state.\n  //   In bootstrap themes, label is rendered as a text, but in inline mode,\n  //   it's treated as a field label.\n  // Available in:\n  //   bootstrap3\n  //   bootstrap4\n  inline={true}\n  // Input wrapper class name.\n  //   In bootstrap themes, passed className is used on field block. This is\n  //   used on direct field wrapper.\n  // Available in:\n  //   bootstrap3\n  //   bootstrap4\n  inputClassName=\"a b c\"\n  // Input ref.\n  //   Setting ref prop to a field won't work as desired, because you'll\n  //   receive a field component rather than a HTML input. If you need an input ref,\n  //   use this prop instead.\n  inputRef={ref => {}}\n  // Props for the InputLabel\n  // Available in:\n  //   material-ui\n  labelProps={{shrink: true, disableAnimation: true}}\n  // Field inline error.\n  //   *Some description would be great, huh?*\n  // Available in:\n  //   antd\n  //   bootstrap3\n  //   bootstrap4\n  //   semantic\n  showInlineError={true}\n  // Label transform.\n  //   Allows to transform the each value into a human-readable label\n  transform={value => label} //   Set of values that will be shown in the select.\n  // Options.\n  //   It is optional and using \\`options\\` will override \\`transform\\` and \\`allowedValues\\`.\n  //   It can be either an object or an array (or a function, that returns it).\n  options={[{label: 'Hi', value: value1}, {label: 'Hello', value: value1} /* ... */]}\n/>;\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note:`}</MDXTag>{` All `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`BaseField`}</MDXTag>{` props are also accepted.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}