{"version":3,"sources":["webpack:///./pages/API/BaseField.mdx"],"names":["MDXContent","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","call","layout","_this$props","components","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","id","parentName","className","React","Component"],"mappings":"s0BAQqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAJ,IACjBE,EAAAG,IAAAD,KAAAE,IAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,wDAIV,IAAAO,EAC0BL,KAAKH,MAA9BS,EADDD,EACCC,WADDC,IAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYT,MAAO,CAACgB,GAAK,cAAvD,aACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMjB,MAAO,CAACkB,UAAY,gBAAjF,w2CAZHC,IAAMC","file":"static/js/pages-api-base-field.a65a658b.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h2\" components={components} props={{\"id\":\"basefield\"}}>{`BaseField`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import BaseField from 'uniforms/BaseField';\n\n// You can't really render a BaseField because it doesn't have a render method.\n// It's a base class of all packaged fields, so that all props below are available\n// to all fields.\n<BaseField\n  // Field disabled state.\n  //   It's passed directly to the field, but it propagates same as the label.\n  disabled={false}\n  // Field label.\n  //   This prop has three modes. If you pass a string, then it will be used\n  //   as a label. If you pass a null, then it won't have a label, but nested\n  //   fields will have default labels. If you pass a non-null falsy value, it\n  //   won't have a label and nested fields won't have labels too.\n  label={true}\n  // Field name.\n  //   Used for identification. It should match your schema - if not, it will\n  //   throw an error.\n  name=\"field\"\n  // Field placeholder.\n  //   If set to true, then a label will be used. Otherwise, it's handled like\n  //   a label (including propagation).\n  placeholder={false}\n  // Field value.\n  //   Every field accepts its specific value type only.\n  value={value}\n\n  // You can pass any prop but remember that passing onChange will \"detach\"\n  // the field from the form in some way - it won't change your form state.\n  // Also, passing any already provided prop - like id - will override the\n  // default one.\n/>;\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}