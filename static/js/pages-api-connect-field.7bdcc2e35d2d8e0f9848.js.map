{"version":3,"sources":["webpack:///./pages/API/connectField.mdx"],"names":["MDXContent","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","call","layout","_this$props","components","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","id","parentName","className","React","Component"],"mappings":"00BAQqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAJ,IACjBE,EAAAG,IAAAD,KAAAE,IAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,wDAIV,IAAAO,EAC0BL,KAAKH,MAA9BS,EADDD,EACCC,WADDC,IAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYT,MAAO,CAACgB,GAAK,iBAAvD,gBACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMjB,MAAO,CAACkB,UAAY,gBAAjF,2nCAZHC,IAAMC","file":"static/js/pages-api-connect-field.3ff7b2ee.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h2\" components={components} props={{\"id\":\"connectfield\"}}>{`connectField`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import connectField from 'uniforms/connectField';\n\nconst ComponentXField = connectField(ComponentX, {\n  // Props mapper\n  //   Useful for integration with third-party components. For example, you\n  //   can rename specific props instead of doing mapping by hand in the\n  //   component.\n  mapProps: props => props,\n\n  // Base field class\n  //   It's reserved for the future - right now there's no useful usecase.\n  baseField: BaseField,\n\n  // <input> helper\n  //   In React, <input> can't have undefined or null value and any onChange\n  //   at once - this option passes 'undefined' as en empty string.\n  ensureValue: true,\n\n  // Initial value check\n  //   If truthy, then after the first render defaultValue is set as value if\n  //   no value is provided (undefined).\n  initialValue: true,\n\n  // Additional parent prop\n  //   If truthy, additional parent prop is provided (if any). Useful for\n  //   nested or complex fields.\n  includeParent: false,\n\n  // Field name chain visibility\n  //   If truthy, then every nested field name will be prefixed with parent\n  //   name.\n  includeInChain: true\n});\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}